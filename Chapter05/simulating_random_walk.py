# ------------------------------------------------------------
# ランダムウォーク（Random Walk）のシミュレーション
# ------------------------------------------------------------
from random import seed, random
from matplotlib import pyplot as plt

# ------------------------------------------------------------
# 1. 初期設定
# ------------------------------------------------------------
seed(1)  # 再現性を確保するため乱数シードを固定

RWPath = []  # ランダムウォークの位置履歴を格納するリスト
RWPath.append(-1 if random() < 0.5 else 1)  # 初期ステップ（±1のどちらか）

# ------------------------------------------------------------
# 2. ランダムウォークの生成
# ------------------------------------------------------------
# 各ステップごとに +1 または -1 を確率1/2で加算する
for i in range(1, 1000):
    ZNValue = -1 if random() < 0.5 else 1  # 1ステップの変化量
    XNValue = RWPath[i - 1] + ZNValue  # 直前の値に加算
    RWPath.append(XNValue)  # 結果を記録

# ------------------------------------------------------------
# 3. 可視化
# ------------------------------------------------------------
plt.figure(figsize=(8, 4))
plt.plot(RWPath, color="navy")
plt.title("1D Random Walk Simulation")
plt.xlabel("Step")
plt.ylabel("Position")
plt.grid(True)
plt.show()

# ------------------------------------------------------------
# 4. 理論的背景
# ------------------------------------------------------------
# ランダムウォークとは：
# ・各ステップで ±1 のランダムな変化を加える確率過程
# ・時間が経つにつれ平均は 0 に収束し、分散はステップ数 n に比例する
# ・物理学・金融・統計物理などで広く応用される
#
# 数学的には：
#   X_n = X_{n-1} + Z_n,   Z_n ∈ {-1, +1},  P(Z_n=±1)=1/2
#
# ・E[X_n] = 0
# ・Var[X_n] = n
#
# つまり「平均的には原点に戻る」が、「振れ幅（分散）」は時間とともに大きくなる。
